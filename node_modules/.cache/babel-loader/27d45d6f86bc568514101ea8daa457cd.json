{"ast":null,"code":"import _classCallCheck from \"/Users/george/Desktop/code/react-memory-game/memory-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/george/Desktop/code/react-memory-game/memory-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/george/Desktop/code/react-memory-game/memory-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/george/Desktop/code/react-memory-game/memory-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/george/Desktop/code/react-memory-game/memory-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/george/Desktop/code/react-memory-game/memory-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport characters from \"./characters.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      characters: characters,\n      selectedIds: []\n    };\n\n    _this.guessingFunction = function (key) {\n      console.log(key);\n      var selectIds = _this.state.selectedIds; // console.log(key);\n      // console.log(this.state.characters[key])\n\n      var characters = _this.state.characters;\n      console.log(characters[key].name + \" is \" + characters[key].selected);\n\n      if (characters[key].selected) {// if(window.confirm('Already Guessed! Would you like to play again?')){\n        //     window.location.reload();\n        // }\n        // alert('selected')\n      } else {\n        characters[key].selected = true; // console.log(characters)\n\n        characters = characters.map(function (a) {\n          return [Math.random(), a];\n        }).sort(function (a, b) {\n          return a[0] - b[0];\n        }).map(function (a) {\n          return a[1];\n        }); // console.log(characters)\n        // const shuffleArray = arr => arr\n        //     .map(a => [Math.random(), a])\n        //     .sort((a, b) => a[0] - b[0])\n        //     .map(a => a[1]);\n        // shuffleArray(characters)\n\n        _this.setState({\n          characters: characters\n        }); // console.log(this.state.characters)x\n\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.characters.map(function (character) {\n        return React.createElement(CharacterCard, {\n          key: character.id,\n          id: character.id,\n          name: character.name,\n          image: character.image,\n          guessCharacter: _this2.guessingFunction,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/george/Desktop/code/react-memory-game/memory-game/src/App.js"],"names":["React","Component","Wrapper","CharacterCard","characters","App","state","selectedIds","guessingFunction","key","console","log","selectIds","name","selected","map","a","Math","random","sort","b","setState","character","id","image"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJF,MAAAA,UAAU,EAAEA,UADR;AAEJG,MAAAA,WAAW,EAAE;AAFT,K;;UAKRC,gB,GAAmB,UAACC,GAAD,EAAS;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAIG,SAAS,GAAG,MAAKN,KAAL,CAAWC,WAA3B,CAFwB,CAGxB;AACA;;AACA,UAAIH,UAAU,GAAC,MAAKE,KAAL,CAAWF,UAA1B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAU,CAACK,GAAD,CAAV,CAAgBI,IAAhB,GAAuB,MAAvB,GAAgCT,UAAU,CAACK,GAAD,CAAV,CAAgBK,QAA5D;;AACA,UAAGV,UAAU,CAACK,GAAD,CAAV,CAAgBK,QAAnB,EAA4B,CACxB;AACA;AACA;AACA;AACH,OALD,MAKK;AACDV,QAAAA,UAAU,CAACK,GAAD,CAAV,CAAgBK,QAAhB,GAA2B,IAA3B,CADC,CAED;;AACAV,QAAAA,UAAU,GAAGA,UAAU,CAACW,GAAX,CAAe,UAACC,CAAD;AAAA,iBAAO,CAACC,IAAI,CAACC,MAAL,EAAD,EAAeF,CAAf,CAAP;AAAA,SAAf,EACRG,IADQ,CACH,UAACH,CAAD,EAAGI,CAAH;AAAA,iBAASJ,CAAC,CAAC,CAAD,CAAD,GAAKI,CAAC,CAAC,CAAD,CAAf;AAAA,SADG,EAERL,GAFQ,CAEJ,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAAC,CAAD,CAAR;AAAA,SAFI,CAAb,CAHC,CAMD;AACA;AACA;AACA;AACA;AAEA;;AACA,cAAKK,QAAL,CAAc;AACVjB,UAAAA,UAAU,EAAEA;AADF,SAAd,EAbC,CAiBD;;AACH;AAEJ,K;;;;;;;6BAEO;AAAA;;AACJ,aACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWF,UAAX,CAAsBW,GAAtB,CAA2B,UAAAO,SAAS;AAAA,eACjC,oBAAC,aAAD;AACI,UAAA,GAAG,EAAIA,SAAS,CAACC,EADrB;AAEI,UAAA,EAAE,EAAID,SAAS,CAACC,EAFpB;AAGI,UAAA,IAAI,EAAID,SAAS,CAACT,IAHtB;AAII,UAAA,KAAK,EAAIS,SAAS,CAACE,KAJvB;AAKI,UAAA,cAAc,EAAI,MAAI,CAAChB,gBAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADiC;AAAA,OAApC,CADL,CADJ;AAaH;;;;EAtDaP,S;;AAyDlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\"\nimport CharacterCard from \"./components/CharacterCard\";\nimport characters from \"./characters.json\";\n\nclass App extends Component{\n    state = {\n        characters: characters,\n        selectedIds: []\n    };\n\n    guessingFunction = (key) => {\n        console.log(key);\n        let selectIds = this.state.selectedIds\n        // console.log(key);\n        // console.log(this.state.characters[key])\n        let characters=this.state.characters\n        console.log(characters[key].name + \" is \" + characters[key].selected)\n        if(characters[key].selected){\n            // if(window.confirm('Already Guessed! Would you like to play again?')){\n            //     window.location.reload();\n            // }\n            // alert('selected')\n        }else{\n            characters[key].selected = true\n            // console.log(characters)\n            characters = characters.map((a) => [Math.random(),a])\n                .sort((a,b) => a[0]-b[0])\n                .map((a) => a[1]);\n            // console.log(characters)\n            // const shuffleArray = arr => arr\n            //     .map(a => [Math.random(), a])\n            //     .sort((a, b) => a[0] - b[0])\n            //     .map(a => a[1]);\n            \n            // shuffleArray(characters)\n            this.setState({\n                characters: characters\n                \n            })\n            // console.log(this.state.characters)x\n        }\n        \n    }\n\n    render(){\n        return(\n            <Wrapper>\n                {this.state.characters.map( character =>(\n                    <CharacterCard\n                        key = {character.id}\n                        id = {character.id}\n                        name = {character.name}\n                        image = {character.image}\n                        guessCharacter = {this.guessingFunction}\n                    />\n                ))}\n            </Wrapper>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}